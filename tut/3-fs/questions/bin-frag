If I could have a size variable of the used section and maybe a variable that points the the next memory address in the node block. It will be easier to dealloc. With the size variable, we can allocate the require size block. If there is interal fragmentation, if there is a smaller block than the unused block, we can allocate from the unused section. First we will have to store the indexes of partial filled blocks in a data structure. In addition, if we have a pointer value to the next address block from the global bool. We can merge after deallocation easier, just search through the list and pop the value of the next if unsued in the bins and merge. 


Another way to improve the bin allocator from an internal fragmentation standpoint is to allocate only the required size, however there is a alignment problem. In order to fix this, we could split the memory allocation up into pieces like packets. If the block in the bin has the wrong alignment, we can just align the starting address on the correct value, but have pointers to the next node in the data like the cluster. This will help with the external fragmentation and less spaces between blocks are unused. 